//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Composition.Properties {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("System.Composition.Properties.Resources", typeof(Resources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of argument &apos;{0}&apos; is not supported.  The expression must use operator new..
        /// </summary>
        internal static string Argument_ExpressionMustBeNew {
            get {
                return ResourceManager.GetString("Argument_ExpressionMustBeNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of argument &apos;{0}&apos; is not supported.  The expression must be a property member expression..
        /// </summary>
        internal static string Argument_ExpressionMustBePropertyMember {
            get {
                return ResourceManager.GetString("Argument_ExpressionMustBePropertyMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of argument &apos;{0}&apos; is not supported.  The expression must be a void Method() member expression..
        /// </summary>
        internal static string Argument_ExpressionMustBeVoidMethodWithNoArguments {
            get {
                return ResourceManager.GetString("Argument_ExpressionMustBeVoidMethodWithNoArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be an empty string (&quot;&quot;)..
        /// </summary>
        internal static string ArgumentException_EmptyString {
            get {
                return ResourceManager.GetString("ArgumentException_EmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of argument &apos;{0}&apos; ({1}) is not supported. Allowed values are : &apos;{2}&apos;..
        /// </summary>
        internal static string ArgumentOutOfRange_InvalidEnumInSet {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_InvalidEnumInSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Only one export for the contract &apos;{0}&apos; is allowed, multiple implementations were found.&quot;.
        /// </summary>
        internal static string CardinalityMismatch_TooManyExports {
            get {
                return ResourceManager.GetString("CardinalityMismatch_TooManyExports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The component (unknown) cannot be created outside the {0} sharing boundary..
        /// </summary>
        internal static string Component_NotCreatableOutsideSharingBoundary {
            get {
                return ResourceManager.GetString("Component_NotCreatableOutsideSharingBoundary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No export was found for the contract &apos;{0}&apos;..
        /// </summary>
        internal static string CompositionContext_NoExportFoundForContract {
            get {
                return ResourceManager.GetString("CompositionContext_NoExportFoundForContract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing dependency &apos;{0}&apos; on &apos;{1}&apos;..
        /// </summary>
        internal static string CompositionContextExtensions_MissingDependency {
            get {
                return ResourceManager.GetString("CompositionContextExtensions_MissingDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Composition failed..
        /// </summary>
        internal static string CompositionFailedDefaultExceptionMessage {
            get {
                return ResourceManager.GetString("CompositionFailedDefaultExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sharing lock is required.
        /// </summary>
        internal static string CompositionOperation_SharingLockRequired {
            get {
                return ResourceManager.GetString("CompositionOperation_SharingLockRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default conventions for the container configuration have already been set..
        /// </summary>
        internal static string ContainerConfiguration_DefaultConventionSet {
            get {
                return ResourceManager.GetString("ContainerConfiguration_DefaultConventionSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple imports have been configured for &apos;{0}&apos;. At most one import can be applied to a single site..
        /// </summary>
        internal static string ContractHelpers_TooManyImports {
            get {
                return ResourceManager.GetString("ContractHelpers_TooManyImports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No export was found for the contract &apos;{0}&apos;.
        /// </summary>
        internal static string Dependency_ExportNotFound {
            get {
                return ResourceManager.GetString("Dependency_ExportNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;.
        /// </summary>
        internal static string Dependency_QuoteParameter {
            get {
                return ResourceManager.GetString("Dependency_QuoteParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one export for the contract &apos;{0}&apos; is allowed, but the following parts: {1} export it..
        /// </summary>
        internal static string Dependency_TooManyExports {
            get {
                return ResourceManager.GetString("Dependency_TooManyExports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; on contract &apos;{1}&apos; supplied by {2}.
        /// </summary>
        internal static string Dependency_ToStringFormat {
            get {
                return ResourceManager.GetString("Dependency_ToStringFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error occurred. Additional information: &apos;{0}&apos;..
        /// </summary>
        internal static string Diagnostic_InternalExceptionMessage {
            get {
                return ResourceManager.GetString("Diagnostic_InternalExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception Thrown: {0}\r\n.
        /// </summary>
        internal static string Diagnostic_ThrowingException {
            get {
                return ResourceManager.GetString("Diagnostic_ThrowingException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple importing constructors were found on type &apos;{0}&apos;..
        /// </summary>
        internal static string DiscoveredPart_MultipleImportingConstructorsFound {
            get {
                return ResourceManager.GetString("DiscoveredPart_MultipleImportingConstructorsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No importing constructor was found on type &apos;{0}&apos;..
        /// </summary>
        internal static string DiscoveredPart_NoImportingConstructorsFound {
            get {
                return ResourceManager.GetString("DiscoveredPart_NoImportingConstructorsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  -&gt; required by initial request for contract &apos;{0}&apos;.
        /// </summary>
        internal static string ExportDescriptor_DependencyErrorContract {
            get {
                return ResourceManager.GetString("ExportDescriptor_DependencyErrorContract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  -&gt; required by import &apos;{0}&apos; of part &apos;{1}&apos;.
        /// </summary>
        internal static string ExportDescriptor_DependencyErrorLine {
            get {
                return ResourceManager.GetString("ExportDescriptor_DependencyErrorLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} supplied by {1}.
        /// </summary>
        internal static string ExportDescriptor_ToStringFormat {
            get {
                return ResourceManager.GetString("ExportDescriptor_ToStringFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected an unsupported cycle for part &apos;{0}&apos;. To construct a valid cycle, at least one part in the cycle must be shared, and at least one import in the cycle must be non-prerequisite (e.g. a property)..
        /// </summary>
        internal static string ExportDescriptor_UnsupportedCycle {
            get {
                return ResourceManager.GetString("ExportDescriptor_UnsupportedCycle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export descriptor fulfillment function returned null..
        /// </summary>
        internal static string ExportDescriptorNull {
            get {
                return ResourceManager.GetString("ExportDescriptorNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , .
        /// </summary>
        internal static string Formatter_ListSeparatorWithSpace {
            get {
                return ResourceManager.GetString("Formatter_ListSeparatorWithSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , .
        /// </summary>
        internal static string Formatter_ListSeparatorWithSpace1 {
            get {
                return ResourceManager.GetString("Formatter_ListSeparatorWithSpace1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;none&gt;.
        /// </summary>
        internal static string Formatter_None {
            get {
                return ResourceManager.GetString("Formatter_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata View Provider.
        /// </summary>
        internal static string Keyword_MetadataViewProvider {
            get {
                return ResourceManager.GetString("Keyword_MetadataViewProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; cannot be used as a metadata view. A metadata view must be a concrete class with a parameterless or dictionary constructor..
        /// </summary>
        internal static string MetadataViewProvider_InvalidViewImplementation {
            get {
                return ResourceManager.GetString("MetadataViewProvider_InvalidViewImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export metadata for &apos;{0}&apos; is missing and no default value was supplied..
        /// </summary>
        internal static string MetadataViewProvider_MissingMetadata {
            get {
                return ResourceManager.GetString("MetadataViewProvider_MissingMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata value circularity not possible, use lazy initialization..
        /// </summary>
        internal static string NotImplemented_MetadataCycles {
            get {
                return ResourceManager.GetString("NotImplemented_MetadataCycles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method {0}.{1} has the OnImportsSatisfied attribute applied, but is not a public or internal parameterless instance method returning void..
        /// </summary>
        internal static string OnImportsSatisfiedFeature_AttributeError {
            get {
                return ResourceManager.GetString("OnImportsSatisfiedFeature_AttributeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constructor selection convention that would apply to Type &apos;{0}&apos; has been overridden by attributes applied in the source file or by a prior convention..
        /// </summary>
        internal static string Registration_ConstructorConventionOverridden {
            get {
                return ResourceManager.GetString("Registration_ConstructorConventionOverridden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An Export specification convention that would apply to Member &apos;{0}&apos; of type &apos;{1}&apos; has been overridden by attributes applied in the source file or by a prior convention..
        /// </summary>
        internal static string Registration_MemberExportConventionOverridden {
            get {
                return ResourceManager.GetString("Registration_MemberExportConventionOverridden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one import specification convention can apply to a single Member. More than one convention specification applies to this Member &apos;{0}&apos; of Type &apos;{1}&apos;..
        /// </summary>
        internal static string Registration_MemberImportConventionMatchedTwice {
            get {
                return ResourceManager.GetString("Registration_MemberImportConventionMatchedTwice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An Import specification convention that would apply to Member &apos;{0}&apos; of type &apos;{1}&apos; has been overridden by attributes applied in the source file or by a prior convention..
        /// </summary>
        internal static string Registration_MemberImportConventionOverridden {
            get {
                return ResourceManager.GetString("Registration_MemberImportConventionOverridden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A OnSatisfiedImports specification convention that would apply to Type &apos;{0}&apos; has been overridden by attributes applied in the source file or by a prior convention..
        /// </summary>
        internal static string Registration_OnSatisfiedImportNotificationOverridden {
            get {
                return ResourceManager.GetString("Registration_OnSatisfiedImportNotificationOverridden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A ParameterImport specification convention that would apply to Parameter &apos;{0}&apos; of Constructor &apos;{1}&apos; has been overridden by attributes applied in the source file or by a prior convention..
        /// </summary>
        internal static string Registration_ParameterImportConventionOverridden {
            get {
                return ResourceManager.GetString("Registration_ParameterImportConventionOverridden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A PartCreationPolicy specification convention that would apply to Type &apos;{0}&apos; has been overridden by attributes applied in the source file or by a prior convention..
        /// </summary>
        internal static string Registration_PartCreationConventionOverridden {
            get {
                return ResourceManager.GetString("Registration_PartCreationConventionOverridden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A PartMetadata specification convention that would apply to Type &apos;{0}&apos; has been overridden by attributes applied in the source file or by a prior convention..
        /// </summary>
        internal static string Registration_PartMetadataConventionOverridden {
            get {
                return ResourceManager.GetString("Registration_PartMetadataConventionOverridden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An Export specification convention that would apply to type &apos;{0}&apos; has been overridden by attributes applied in the source file or by a prior convention..
        /// </summary>
        internal static string Registration_TypeExportConventionOverridden {
            get {
                return ResourceManager.GetString("Registration_TypeExportConventionOverridden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exported contract &apos;{0}&apos; of open generic part &apos;{1}&apos; does not match the generic arguments of the class..
        /// </summary>
        internal static string TypeInspector_ArgumentMissmatch {
            get {
                return ResourceManager.GetString("TypeInspector_ArgumentMissmatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exported contract type &apos;{0}&apos; is not assignable from part &apos;{1}&apos;..
        /// </summary>
        internal static string TypeInspector_ContractNotAssignable {
            get {
                return ResourceManager.GetString("TypeInspector_ContractNotAssignable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exported contract type &apos;{0}&apos; is not assignable from property &apos;{1}&apos; of part &apos;{2}&apos;..
        /// </summary>
        internal static string TypeInspector_ExportedContractTypeNotAssignable {
            get {
                return ResourceManager.GetString("TypeInspector_ExportedContractTypeNotAssignable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The open generic export &apos;{0}&apos; on part &apos;{1}&apos; is not compatible with the contract &apos;{2}&apos;..
        /// </summary>
        internal static string TypeInspector_ExportNotCompatible {
            get {
                return ResourceManager.GetString("TypeInspector_ExportNotCompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open generic part &apos;{0}&apos; cannot export non-generic contract &apos;{1}&apos;..
        /// </summary>
        internal static string TypeInspector_NoExportNonGenericContract {
            get {
                return ResourceManager.GetString("TypeInspector_NoExportNonGenericContract", resourceCulture);
            }
        }
    }
}
